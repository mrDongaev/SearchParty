@page "/ProfilesBoard"


@rendermode InteractiveAuto
@inject IAuthService _authService
@inject NavigationManager _navMan
@inject AuthenticationStateProvider _authenticationStateProvider
@inject IProfileService _profileService
@inject ILocalStorageService _localStorage
@inject IDialogService DialogService

<MudText Typo="Typo.h4">Teams Board</MudText>

@if (Profiles == null)
{
    <MudProgressCircular Color="Color.Primary" Size="Size.Medium" Indeterminate="true"/>
}
else if (!Profiles.Any())
{
    <MudText Typo="Typo.h6">Команд не найдено </MudText>
}
else
{
    <MudDataGrid Items="@Profiles" Filterable="false" SortMode="@SortMode.None" Groupable="false">
        <Columns>
            <PropertyColumn Property="x => x.Name" Title="Название"/>
            <PropertyColumn Property="x => x.Description" Title="Средний MMR"/>
            <PropertyColumn Property="x => x.Heroes.Count" Title="Описание"/>
            <PropertyColumn Property="x => x.Displayed" Title="WTF"/>
            <PropertyColumn Property="x => x.Position" Title="Всего игорьков"/>
            <TemplateColumn CellClass="d-flex justify-end">
                <CellTemplate>
                    <MudStack Row>
                        <MudButton Size="@Size.Small" Variant="@Variant.Filled" Color="@Color.Primary" OnClick="@(()=>OpenInviteDialogAsync(context.Item.Id.ToString()))">Пригласить</MudButton>
                    </MudStack>
                </CellTemplate>
            </TemplateColumn>
        </Columns>
    </MudDataGrid>
}

@code {

    [Parameter] public List<Profile> Profiles { get; set; }


    protected async override Task OnParametersSetAsync()
    {
        var s = await _localStorage.GetItemAsStringAsync("Authentication");
        var token = JsonSerializer.Deserialize<LoginResponse>(s);
        Profiles = await _profileService.GetProfilesListAsync(token.AccessToken);
        StateHasChanged();
    }

   
        private async Task OpenInviteDialogAsync(string profileId)
        {
            var options = new DialogOptions { CloseOnEscapeKey = true};
            var parameters = new DialogParameters<InvitePlayer_DialogComponent>
            {
                { x => x.ProfileId, profileId },
                
            };

            var dialog = await DialogService.ShowAsync<InvitePlayer_DialogComponent>("Приглашение игорька",parameters, options);
            var result = await dialog.Result;

            
        }
    

}